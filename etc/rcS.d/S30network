#!/bin/sh
#
# Initializes network interfaces
#

bridgeinterfaces=""

for ifcfg in `ls /etc/sysconfig/network-scripts/ifcfg-*`; do
  ONBOOT=""; DEVICE=""; BOOTPROTO=""; IPADDR=""; NETMASK=""; HWADDR=""; VPI="";
  VCI=""; SC=""; PCR=""; SCR=""; MBS=""; ENCAP=""; BIND=""; TYPE=""; BRIDGE=""; 
  ALLMULTI=""; PROMISC="";
  . $ifcfg

  [ "${ONBOOT}" != "yes" ] && continue

  if [ -z "${DEVICE}" ]; then
    echo "  Missing DEVICE for network interface ${ifcfg}"
    continue
  fi

  # Save bridge interfaces for last
  if [ "${TYPE}" = "Bridge" ]; then
    bridgeinterfaces="$bridgeinterfaces $ifcfg"
    continue
  fi

  echo "Bringing up interface ${DEVICE}"
  ifname="`echo ${DEVICE} | sed -e 's/[0-9]*$//'`"
  ifnum="`echo ${DEVICE} | sed -e 's/[a-z]*//g'`"

  # MAC Address setting
  if [ -n "${HWADDR}" ]; then
    # Set MAC address
    /sbin/ifconfig ${DEVICE} down hw ether ${HWADDR}
  fi

  # ATM setting
  if [ "${ifname}" = "atm" ]; then
    # ATM VPI/VCI
    if [ -n "${VPI}" ] && [ -n "${VCI}" ]; then
      /sbin/atmconfig ${DEVICE} vpi_vci ${VPI} ${VCI}
    fi

    # ATM QoS
    if [ "${SC}" = "cbr" ] || [ "${SC}" = "ubr" ]; then
      if [ -n "${PCR}" ]; then
        /sbin/atmconfig ${DEVICE} sc ${SC} pcr ${PCR}
      else
        echo "  Missing PCR for device ${DEVICE}"
        continue
      fi
    else 
      if [ "${SC}" = "vbr" ]; then
        if [ -n "${PCR}" ] && [ -n "${SCR}" ] && [ -n "${MBS}" ]; then
          /sbin/atmconfig ${DEVICE} sc ${SC} pcr ${PCR} scr ${SCR} mbs ${MBS}
        else
          echo "  Missing PCR, SCR and/or MBS for device ${DEVICE}"
          continue
        fi
      else
        echo "  Incorrect ATM service category specified for device ${DEVICE}"
        continue
      fi
    fi

    # ATM Encap
    if [ "${ENCAP}" = "llc" ] || [ "${ENCAP}" = "vc" ]; then
      /sbin/atmconfig ${DEVICE} encap ${ENCAP}
    else
      echo "  Unknown RFC2684 encapsulation specified for device ${DEVICE}"
      continue
    fi

  fi

  if [ "${ALLMULTI}" = "yes" ]; then
    # Set allmulti for interface
    /sbin/ifconfig ${DEVICE} allmulti
  fi

  if [ "${PROMISC}" = "yes" ]; then
    # Set promisc for interface
    echo "Set promisc for device ${DEVICE}"
    /sbin/ifconfig ${DEVICE} promisc
  fi
  
  if [ "${BOOTPROTO}" = "dhcp" ]; then
    # Use DHCP
    echo " Configuring via udhcpc"
    /sbin/ifconfig ${DEVICE} 0.0.0.0 up
    /sbin/udhcpc -n -i ${DEVICE} -s /etc/dhcp.script >/dev/null 2>/dev/null ||
      (echo "  Can't configure using DHCP" && /sbin/ifconfig ${DEVICE} down)
    continue
  fi

  if [ "${BOOTPROTO}" = "pppoe" ]; then
    # Use PPPoE
    echo " Configuring PPPoE"
    /sbin/ifconfig ${DEVICE} up
    /usr/bin/pppoe-start ${DEVICE} &
    sleep 5
    continue
  fi

  if [ "${BOOTPROTO}" = "none" ]; then
    echo " Configuring with no IP address (i.e. for PPP)"
    /sbin/ifconfig ${DEVICE} up
    continue
  fi

  # Static IP
  if [ -z "${IPADDR}" ]; then
    echo "  Missing IPADDR for device ${DEVICE}"
    continue
  fi
  params="${DEVICE} ${IPADDR}"
  [ -n "${NETMASK}" ] && params="${params} netmask ${NETMASK}"
  [ -n "${BROADCAST}" ] && params="${params} broadcast ${BROADCAST}"
  /sbin/ifconfig ${params}
  
done

# Process the bridge interfaces now
for ifcfg in $bridgeinterfaces; do
   DEVICE=""; BOOTPROTO=""; IPADDR=""; NETMASK=""; TYPE="";
  . $ifcfg

   echo "Bringing up bridge ${DEVICE}"

   params="${DEVICE}"
   [ -n "${IPADDR}" ] && params="${params} ${IPADDR}"
   [ -n "${NETMASK}" ] && params="${params} netmask ${NETMASK}"
   /sbin/ifconfig ${params} up
done
