<%
IMPORT FILE "common_gch.gch";
IMPORT FILE "auth/api.gch";
function basic_func(FP_ACTION, FP_INDEX, FP_ERRORSTR)
{
var FP_OBJNAME      = "OBJ_BRGRP_ID";
var FP_MULTIDISPLAY = 0;
var FP_IDENTITY     = "";
var IPAddr          = "";
var FP_HANDLE;
var PARA[9] =
{
"ETHIfNum",
"USBIfNum",
"WLANIfNum",
"Enable",
"IPAddr",
"SubMask",
"AddressingType",
"IPv6Addr",
"IPv6PrefLen"
};
var FP_PARANUM      = 9;
FP_INDEX = ifIndexNULL("old", FP_INDEX);
var FP_INSTNUM = query_list(FP_OBJNAME, "IGD");
if(FP_INSTNUM != 888 && FP_INDEX >=0)
{
FP_IDENTITY = query_identity(FP_INDEX);
}
var GET_HANDLE = create_paralist();
if("" != FP_IDENTITY)
{
get_inst(GET_HANDLE, FP_OBJNAME, FP_IDENTITY);
IPAddr = get_para(GET_HANDLE, "IPAddr");
}
destroy_paralist(GET_HANDLE);
if (FP_ACTION == "apply")
{
FP_HANDLE = create_paralist();
set_para(FP_HANDLE, "ETHIfNum", request("ETHIfNum"));
set_para(FP_HANDLE, "USBIfNum", request("USBIfNum"));
set_para(FP_HANDLE, "WLANIfNum", request("WLANIfNum"));
set_para(FP_HANDLE, "Enable", request("Enable"));
set_para(FP_HANDLE, "IPAddr", request("BasicIPAddr"));
set_para(FP_HANDLE, "SubMask", request("SubMask"));
set_para(FP_HANDLE, "AddressingType", request("AddressingType"));
set_para(FP_HANDLE, "IPv6Addr", request("IPv6Addr"));
set_para(FP_HANDLE, "IPv6PrefLen", request("IPv6PrefLen"));
FP_IDENTITY = set_inst(FP_HANDLE, FP_OBJNAME, FP_IDENTITY);
FP_ERRORSTR = getDisplayInstError(FP_ERRORSTR);
}
if(0 == FP_MULTIDISPLAY)
{
FP_HANDLE = create_paralist();
get_inst(FP_HANDLE, FP_OBJNAME, FP_IDENTITY);
="<INPUT type='hidden' name='ETHIfNum'   ID='ETHIfNum' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="ETHIfNum";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[0]));
="');";
="</script>\n";
="<INPUT type='hidden' name='USBIfNum'   ID='USBIfNum' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="USBIfNum";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[1]));
="');";
="</script>\n";
="<INPUT type='hidden' name='WLANIfNum'   ID='WLANIfNum' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="WLANIfNum";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[2]));
="');";
="</script>\n";
="<INPUT type='hidden' name='Enable'   ID='Enable' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="Enable";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[3]));
="');";
="</script>\n";
="<INPUT type='hidden' name='BasicIPAddr'   ID='BasicIPAddr' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="BasicIPAddr";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[4]));
="');";
="</script>\n";
="<INPUT type='hidden' name='SubMask'   ID='SubMask' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="SubMask";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[5]));
="');";
="</script>\n";
="<INPUT type='hidden' name='AddressingType'   ID='AddressingType' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="AddressingType";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[6]));
="');";
="</script>\n";
="<INPUT type='hidden' name='IPv6Addr'   ID='IPv6Addr' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="IPv6Addr";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[7]));
="');";
="</script>\n";
="<INPUT type='hidden' name='IPv6PrefLen'   ID='IPv6PrefLen' value=''>\n";
="<script language=javascript>Transfer_meaning('";
="IPv6PrefLen";
="','";
=encodeJS(get_para(FP_HANDLE, PARA[8]));
="');";
="</script>\n";
destroy_paralist(FP_HANDLE);
}
var FP_IP_Protocol  = request("IP_Protocol");
create_hidden_sep("IP_Protocol", FP_IP_Protocol);
var FP_URL_IP  = request("IP_URL_IP");
create_hidden_sep("IP_URL_IP", FP_URL_IP);
return getDisplayInstError(FP_ERRORSTR);
}
%>
