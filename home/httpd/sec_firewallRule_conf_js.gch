<script language="javascript">
var FWIPSTATIC_PARA ;
if(getValue("IF_IPMode") == "IPV6")
{
FWIPSTATIC_PARA= new Array(
"ViewName",
"Enable",
"Protocol",
"Name",
"State",
"SrcIp",
"SrcIpMask",
"DstIp",
"DstIpMask",
"MinSrcPort",
"MaxSrcPort",
"MinDstPort",
"MaxDstPort",
"FilterTarget",
"Level",
"InOut",
"LocalForward",
"Order"
);
}
else
{
FWIPSTATIC_PARA= new Array(
"ViewName",
"Name",
"Enable",
"Order",
"Protocol",
"State",
"SrcIp",
"SrcPrefixLen",
"DstIp",
"DstPrefixLen",
"MinSrcPort",
"MaxSrcPort",
"MinDstPort",
"MaxDstPort",
"FilterTarget",
"InOut",
"LocalForward",
"Level"
);
}
var firstLine = new Array(
"Name",
"Protocol",
"SourceIP",
"SourcePort",
"Order",
"Direction"
);
var secondLine = new Array(
"Enable",
"State",
"DestinationIP",
"DestinationPort",
"FilterTarget"
);
var instIndex ="";
function ChangeIPMode()
{
var IPMode;
IPMode = getValue("Frm_FirewalIPMode");
if(IPMode == 0)
{
setValue("IF_IPMode","IPV4");
}
else
{
setValue("IF_IPMode","IPV6");
}
DisableALL();
getObj("fSubmit").submit();
}
function pageBack()
{
getObj("fSubmit").action = getURL("sec_firewall_conf_t.gch");
DisableALL();
getObj("fSubmit").submit();
}
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
OldProcessRet(errstr, errpara);
moveErrLayer(588,40);
var IPMode;
IPMode = getValue("IF_IPMode");
if(IPMode == "IPV6")
{
setValue("Frm_FirewalIPMode","1");
jslDiDisplay("TR_SrcIp","TR_SrcIpMask","TR_DstIp","TR_DstIpMask");
jslEnDisplay("TR_SrcIpV6","TR_DstIpV6");
}
else
{
setValue("Frm_FirewalIPMode","0");
jslEnDisplay("TR_SrcIp","TR_SrcIpMask","TR_DstIp","TR_DstIpMask");
jslDiDisplay("TR_SrcIpV6","TR_DstIpV6");
}
DisableControlsByProtocal();
showTable();
}
function getNameValue(id, size, value)
{
var inputHTML = "<input type=\"text\" class=\"uiNoBorder\" size=\""
+ size
+ "\" value=\""
+ value
+ "\"  id=\""
+ id + "\"  readonly>";
return (inputHTML);
}
function getDispValFromSelect(FrmID, originVal)
{
var sObj = getObj(FrmID);
for ( var i=0; i<sObj.length; i++ )
{
if ( originVal == sObj.options[i].value )
{
return sObj.options[i].text;
}
}
return "";
}
function addline(instIndex)
{
var newline  = getObj("SecPort_Table").insertRow(-1);
var newline2 = getObj("SecPort_Table").insertRow(-1);
var cellValue = "";
var cellSize = 10;
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
for(var i = 0; i < firstLine.length ; i++)
{
var para = firstLine[i];
if ( para=="SourceIP" )
{
if(getValue("IF_IPMode") == "IPV6")
{
var srcIPV6 = getValue("SrcIp"+instIndex);
var srcPrefixLen = getValue("SrcPrefixLen"+instIndex);
if(srcIPV6 == "::")
{
srcIPV6 = "";
}
if(srcPrefixLen == "-1")
{
srcPrefixLen = "";
}
if((srcIPV6 == "") && (srcPrefixLen == ""))
{
cellValue = "";
}
else
{
cellValue = srcIPV6+"/"+srcPrefixLen;
}
cellSize = 14;
}
else
{
var srcIPAddr = getValue("SrcIp"+instIndex);
var srcIPMask = getValue("SrcIpMask"+instIndex);
if ( srcIPAddr == "0.0.0.0" )
{
srcIPAddr = "";
}
if ( srcIPMask == "0.0.0.0" )
{
srcIPMask = "";
}
cellValue = srcIPAddr+"/"+srcIPMask;
cellSize = 14;
}
}
else if( para=="SourcePort" )
{
var minSrcPort = getValue("MinSrcPort"+instIndex);
var maxSrcPort = getValue("MaxSrcPort"+instIndex);
if ( minSrcPort == "0" )
{
minSrcPort = "";
}
if ( maxSrcPort == "0" )
{
maxSrcPort = "";
}
cellValue = minSrcPort+"-"+maxSrcPort;
cellSize = 8;
}
else if( para=="Protocol" )
{
var originVal = getValue(para+instIndex);
var dispVal = getDispValFromSelect("Frm_Protocol", originVal);
cellValue = dispVal;
cellSize = 7;
}
else if( para=="Direction" )
{
var originInOut = getValue("InOut"+instIndex);
var originLocalForward = getValue("LocalForward"+instIndex);
if(originInOut == "1" && originLocalForward == "1")
{
cellValue = "WAN->CPE";
}
else if(originInOut == "1" && originLocalForward == "2")
{
cellValue = "WAN->LAN";
}
else if(originInOut == "2" && originLocalForward == "1")
{
cellValue = "LAN->CPE";
}
else if(originInOut == "2" && originLocalForward == "2")
{
cellValue = "LAN->WAN";
}
else
{
cellValue = "";
}
cellSize = 12;
}
else if ( para == "Name" )
{
cellValue = getValue(para+instIndex);
cellSize = 6;
}
else if ( para == "Order" )
{
cellValue = getValue(para+instIndex);
cellSize = 7;
}
else
{
cellValue = getValue(para+instIndex);
cellSize = 10;
}
newCell = newline.insertCell(-1);
if( "Enable" == para )
{
newCell.innerHTML = showIsEnableImage(cellValue, "");
}
else
{
newCell.innerHTML = getNameValue("", cellSize, cellValue);
if( para=="Direction" )
{
newCell.id = "direction_" + (2*instIndex).toString();
}
}
}
newCell = newline.insertCell(-1);
newCell.innerHTML = getImagefrmClass("multiImg_modify",
"Modify("+instIndex+")",
"modify"+instIndex);
newCell.id = "modify_" + (2*instIndex).toString();
newCell = newline.insertCell(-1);
newCell.innerHTML = getImagefrmClass("multiImg_delete",
"pageDel("+instIndex+")",
"delete"+instIndex);
newCell.id = "delete_" + (2*instIndex).toString();
newline2.setAttribute("class", "white");
newline2.setAttribute("className", "white");
for(var i = 0; i < secondLine.length ; i++)
{
var para = secondLine[i];
if ( para=="DestinationIP" )
{
if(getValue("IF_IPMode") == "IPV6")
{
var dstIPV6 = getValue("DstIp"+instIndex);
var dstPrefixLen = getValue("DstPrefixLen"+instIndex);
if(dstIPV6 == "::")
{
dstIPV6 = "";
}
if(dstPrefixLen == "-1")
{
dstPrefixLen = "";
}
if((dstIPV6 == "") && (dstPrefixLen == ""))
{
cellValue = "";
}
else
{
cellValue = dstIPV6+"/"+dstPrefixLen;
}
cellSize = 14;
}
else
{
var dstIp = getValue("DstIp"+instIndex);
var dstIpMask = getValue("DstIpMask"+instIndex);
if ( dstIp == "0.0.0.0" )
{
dstIp = "";
}
if ( dstIpMask == "0.0.0.0" )
{
dstIpMask = "";
}
cellValue = dstIp+"/"+dstIpMask;
cellSize = 14;
}
}
else if( para=="DestinationPort" )
{
var minDstPort = getValue("MinDstPort"+instIndex);
var maxDstPort = getValue("MaxDstPort"+instIndex);
if ( minDstPort == "0" )
{
minDstPort = "";
}
if ( maxDstPort == "0" )
{
maxDstPort = "";
}
cellValue = minDstPort+"-"+maxDstPort;
cellSize = 8;
}
else if( para=="State" )
{
var originVal = getValue(para+instIndex);
var dispVal = getDispValFromSelect("Frm_State", originVal);
cellValue = dispVal;
cellSize = 7;
}
else if( para=="FilterTarget" )
{
var originVal = getValue(para+instIndex);
var dispVal = getDispValFromSelect("Frm_FilterTarget", originVal);
cellValue = dispVal;
cellSize = 7;
}
else
{
cellValue = getValue(para+instIndex);
cellSize = 10;
}
newCell = newline2.insertCell(-1);
if( "Enable" == para )
{
newCell.innerHTML = showIsEnableImage(cellValue, "");
}
else
{
newCell.innerHTML = getNameValue("", cellSize, cellValue);
}
}
var obj0 = document.getElementById("direction_" + (2*instIndex).toString());
obj0.rowSpan++;
var obj0 = document.getElementById("modify_" + (2*instIndex).toString());
obj0.rowSpan++;
var obj0 = document.getElementById("delete_" + (2*instIndex).toString());
obj0.rowSpan++;
}
function showTable()
{
var num = getValue("INSTNUM");
if( num > 0)
{
for(var i = 0; i < num; i++)
{
addline(i);
}
}
else
{
var newline = getObj("SecPort_Table").insertRow(-1);
newline.setAttribute("align", "center");
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
var objcell =  newline.insertCell(-1);
objcell.colSpan = 8;
objcell.innerHTML= "&?note_007;";
}
}
function getmsg(id)
{
var str      = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(102, "&?error_102;");
str[2]   = new Array(103, "&?error_103;");
str[3]   = new Array(108, "&?error_108;");
str[4]   = new Array(115, "&?error_115;");
str[5]   = new Array(116, "&?error_116;");
str[6]   = new Array(117, "&?error_117;");
str[7]   = new Array(118, "&?error_118;");
str[8]   = new Array(119, "&?error_119;");
str[9]   = new Array(122, "&?error_122;");
str[10]  = new Array(137, "&?error_137;");
str[11]  = new Array(139, "&?error_139;");
str[12]  = new Array(140, "&?error_140;");
str[13]  = new Array(141, "&?error_141;");
str[14]  = new Array(144, "&?error_144;");
str[15]  = new Array(114, "&?error_114;");
str[16]  = new Array(149, "&?error_149;");
str[17]  = new Array(150, "&?error_150;");
str[18]  = new Array(161, "&?error_161;");
str[19]  = new Array(162, "&?error_162;");
str[20]  = new Array(163, "&?error_163;");
str[21]  = new Array(154, "&?error_154;");
str[22]  = new Array(155, "&?error_155;");
str[23]  = new Array(156, "&?error_156;");
str[24]  = new Array(157, "&?error_157;");
str[25]  = new Array(158, "&?error_158;");
str[26]  = new Array(127, "&?error_127;");
str[27]   = new Array(109, "&?error_109;");
str[28]   = new Array(200, "&?error_200;");
return getMsgFormArray(str, arguments);
}
function setPort(postId, viewId)
{
if( "" == getValue(viewId) )
{
setValue(postId, "0");
}
else
{
jslSetValue(postId, viewId);
}
}
function pageSetValue(instIndex)
{
var Direction = "";
jslSetValue("Name"+instIndex, "Frm_Name");
jslViewToPostCheckBox("Enable"+instIndex, "Frm_Enable");
jslSetValue("Protocol"+instIndex, "Frm_Protocol");
jslSetValue("State"+instIndex, "Frm_State");
jslSetValue("Order"+instIndex, "Frm_Order");
setPort("MinSrcPort"+instIndex, "Frm_MinSrcPort");
setPort("MinDstPort"+instIndex, "Frm_MinDstPort");
setPort("MaxSrcPort"+instIndex, "Frm_MaxSrcPort");
setPort("MaxDstPort"+instIndex, "Frm_MaxDstPort");
if(getValue("IF_IPMode") == "IPV6")
{
jslSetValue("SrcIp"+instIndex, "Frm_SrcIpV6");
jslSetValue("DstIp"+instIndex, "Frm_DstIpV6");
jslSetValue("SrcPrefixLen"+instIndex, "Frm_SrcPrefixLen");
jslSetValue("DstPrefixLen"+instIndex, "Frm_DstPrefixLen");
if ("" == getValue("Frm_SrcIpV6") && "" == getValue("Frm_SrcPrefixLen"))
{
setValue("SrcIp"+instIndex, "::");
setValue("SrcPrefixLen"+instIndex, "-1");
}
if ("" == getValue("Frm_DstIpV6") && "" == getValue("Frm_DstPrefixLen"))
{
setValue("DstIp"+instIndex, "::");
setValue("DstPrefixLen"+instIndex, "-1");
}
}
else
{
setIP("SrcIp"+instIndex, "Frm_SrcIp");
setIP("SrcIpMask"+instIndex, "Frm_SrcIpMask");
setIP("DstIp"+instIndex, "Frm_DstIp");
setIP("DstIpMask"+instIndex, "Frm_DstIpMask");
}
Direction = getValue("Frm_Direction");
if(Direction == "WAN->CPE")
{
setValue("InOut"+instIndex, "1");
setValue("LocalForward"+instIndex, "1");
}
else if(Direction == "WAN->LAN")
{
setValue("InOut"+instIndex, "1");
setValue("LocalForward"+instIndex, "2");
}
else if(Direction == "LAN->CPE")
{
setValue("InOut"+instIndex, "2");
setValue("LocalForward"+instIndex, "1");
}
else if(Direction == "LAN->WAN")
{
setValue("InOut"+instIndex, "2");
setValue("LocalForward"+instIndex, "2");
}
jslSetValue("FilterTarget"+instIndex, "Frm_FilterTarget");
jslSetValue("Level"+instIndex, "fwLevel");
}
function pageCheckValue()
{
var msg = "";
if( false == checkName("Frm_Name", "Fnt_Name", 1, 1, 32) )
{
return  false;
}
if( false == isNotExistSameName("Frm_Name", "Name") )
{
if( "number" != typeof(instIndex) )
{
msg = getmsg(139);
}
else
{
msg = getmsg(140);
}
ShowErrorForCom("Frm_Name", "", msg);
return false;
}
var order = getValue("Frm_Order");
if( order == "" )
{
msg = getmsg(101);
ShowErrorForCom("Frm_Order","Fnt_Order",msg);
return false;
}
else if(checkInteger(order) == false)
{
msg = getmsg(115);
ShowErrorForCom("Frm_Order","Fnt_Order",msg);
return false;
}
else if(checkIntegerRange(order, 0, 31) != true)
{
msg = getmsg(116, 0, 31);
ShowErrorForCom("Frm_Order","Fnt_Order",msg);
return false;
}
else
{
}
if(false == Check_IPAdress())
{
return false;
}
if(false == PageResetValueRmZero("Frm_MinSrcPort","Fnt_MinSrcPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MaxSrcPort","Fnt_MaxSrcPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MinDstPort","Fnt_MinDstPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MaxDstPort","Fnt_MaxDstPort"))
{
return  false;
}
if(getValue("Frm_Protocol") != 3 && getValue("Frm_Protocol") != 4
&& getValue("Frm_Protocol") != 5)
{
var bCheck = checkPort("Frm_MinSrcPort", "Fnt_MinSrcPort", 0, 1, 65535);
if( false == bCheck )
{
return  false;
}
bCheck = checkPort("Frm_MaxSrcPort", "Fnt_MaxSrcPort", 0, 1, 65535);
if( false == bCheck )
{
return  false;
}
bCheck = checkPort("Frm_MinDstPort", "Fnt_MinDstPort", 0, 1, 65535);
if( false == bCheck )
{
return  false;
}
bCheck = checkPort("Frm_MaxDstPort", "Fnt_MaxDstPort", 0, 1, 65535);
if( false == bCheck )
{
return  false;
}
}
if(getValue("Frm_Protocol") != 3 && getValue("Frm_Protocol") != 4
&& getValue("Frm_Protocol") != 5)
{
var minSrcPort = getValue("Frm_MinSrcPort");
var maxSrcPort = getValue("Frm_MaxSrcPort");
if( minSrcPort != ""
&& maxSrcPort != "" )
{
minSrcPort = parseInt(minSrcPort, 10);
maxSrcPort = parseInt(maxSrcPort, 10);
if( minSrcPort > maxSrcPort )
{
msg = getmsg(161);
ShowErrorForCom("Frm_MinSrcPort", null, msg);
return false;
}
}
else if( minSrcPort == ""
&& maxSrcPort != "" )
{
msg = getmsg(163);
ShowErrorForCom("Frm_MinSrcPort", null, msg);
return false;
}
else
{
}
var minDstPort = getValue("Frm_MinDstPort");
var maxDstPort = getValue("Frm_MaxDstPort");
if( minDstPort != ""
&& maxDstPort != "" )
{
minDstPort = parseInt(minDstPort, 10);
maxDstPort = parseInt(maxDstPort, 10);
if( minDstPort > maxDstPort )
{
msg = getmsg(162);
ShowErrorForCom("Frm_MinDstPort", null, msg);
return false;
}
}
else if( minDstPort == ""
&& maxDstPort != "" )
{
msg = getmsg(154);
ShowErrorForCom("Frm_MinDstPort", null, msg);
return false;
}
}
return true;
}
function PageResetValueRmZero(frm_id, fnt_id)
{
if( false == ReSetValueRmZero(frm_id) )
{
var msg = getmsg(144);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function checkName(frm_id, fnt_id, isNull, minLength, maxLength)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
var  nameCheck = checkStrLengthRange(getValue(frm_id), minLength, maxLength);
if("-1" == nameCheck)
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if(false == checkGenStringForASC(getValue(frm_id)))
{
msg = getmsg(114);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
if("-3" == nameCheck)
{
msg = getmsg(102, minLength, maxLength);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function checkPort(frm_id, fnt_id, isNull, minValue, maxValue)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
var portCheck = checkIntegerRange(getValue(frm_id), minValue, maxValue);
if("-1" == portCheck)
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
if("-2" == portCheck)
{
msg = getmsg(115);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if("-3" == portCheck)
{
msg = getmsg(116, minValue, maxValue);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function  checkIP(frm_id, fnt_id, isNull, num)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
if(false == checkNull(getValue(frm_id)))
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return  false;
}
if(false == checkIpAddress(getValue(frm_id), num))
{
msg = getmsg(108);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
if( false == checkIPZero( getValue(frm_id) ) )
{
msg = getmsg(108);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
if( "127.0.0.1" == getValue(frm_id) )
{
msg = getmsg(155);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
if( "255.255.255.255" == getValue(frm_id) )
{
msg = getmsg(156);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
return true;
}
function  checkIPZero(value)
{
var ipaddr = value;
var parts = ipaddr.split(".");
for( var i = 0; i < 4; i++)
{
if( parseInt((parts[i]),10) != 0 )
{
return true;
}
}
return false;
}
function isNotExistSameName(frm_id, hidden_id)
{
var num = getValue("INSTNUM");
for(var i = 0; i < num; i++)
{
if ( "number"==typeof(instIndex) && i==instIndex )
{
continue;
}
if( getValue(frm_id) == getValue(hidden_id + i) )
{
return false;
}
}
return true;
}
function pageAdd()
{
ReSetValueRmZero(   "Frm_Order",
"Frm_MinSrcPort",
"Frm_MaxSrcPort",
"Frm_MinDstPort",
"Frm_MaxDstPort"    );
ReSetIpRmZero(  "Frm_SrcIp",
"Frm_SrcIpMask",
"Frm_DstIp",
"Frm_DstIpMask"    );
instIndex = "";
if(true == pageCheckValue())
{
DisableALL();
pageSetValue(instIndex);
setValue("IACTION", "apply");
getObj("fSubmit").submit();
}
else
{
}
}
function pageEdit()
{
ReSetValueRmZero(   "Frm_Order",
"Frm_MinSrcPort",
"Frm_MaxSrcPort",
"Frm_MinDstPort",
"Frm_MaxDstPort"    );
ReSetIpRmZero(  "Frm_SrcIp",
"Frm_SrcIpMask",
"Frm_DstIp",
"Frm_DstIpMask"    );
if(true == pageCheckValue(instIndex))
{
DisableALL();
pageSetValue(instIndex);
setValue("IACTION"+instIndex, "apply");
getObj("fSubmit").submit();
}
else
{
}
}
function showPort(viewId, postId)
{
if(parseInt(getValue(postId)) == 0)
{
setValue(viewId, "");
}
else
{
jslSetValue(viewId, postId);
}
}
function setIP(postId, viewId)
{
if(getValue(viewId) == "")
{
setValue(postId, "0.0.0.0");
}
else
{
jslSetValue(postId, viewId);
}
}
function showIP(viewId, postId)
{
if(getValue(postId) == "0.0.0.0")
{
setValue(viewId, "");
}
else
{
jslSetValue(viewId, postId);
}
}
function DisableControlsByProtocal()
{
var protocal = getValue("Frm_Protocol");
if( protocal == "3"
|| protocal == "4"  || protocal == "5" )
{
setValue("Frm_MinSrcPort", "");
setValue("Frm_MaxSrcPort", "");
setValue("Frm_MinDstPort", "");
setValue("Frm_MaxDstPort", "");
jslDiDisplay("TR_MaxDstPort",
"TR_MinDstPort",
"TR_MaxSrcPort",
"TR_MinSrcPort");
}
else
{
jslEnDisplay("TR_MaxDstPort",
"TR_MinDstPort",
"TR_MaxSrcPort",
"TR_MinSrcPort");
}
}
function Modify(i)
{
jslDiDisplay("Btn_Add");
jslEnDisplay("Btn_Edit", "back");
ModifyGetValue(i);
DisableControlsByProtocal();
instIndex = i;
}
function ModifyGetValue(i)
{
jslSetValue("Frm_Name", "Name"+i);
jslPostToViewCheckBox("Frm_Enable", "Enable"+i);
jslSetValue("Frm_Order", "Order"+i);
jslSetValue("Frm_Protocol", "Protocol"+i);
jslSetValue("Frm_State", "State"+i);
showPort("Frm_MinSrcPort", "MinSrcPort"+i);
showPort("Frm_MinDstPort", "MinDstPort"+i);
showPort("Frm_MaxSrcPort", "MaxSrcPort"+i);
showPort("Frm_MaxDstPort", "MaxDstPort"+i);
if(getValue("IF_IPMode") == "IPV6")
{
showIPV6("Frm_SrcIpV6", "SrcIp"+i);
showIPV6("Frm_DstIpV6", "DstIp"+i);
jslSetValue("Frm_SrcPrefixLen", "SrcPrefixLen"+i);
if ("" == getValue("Frm_SrcIpV6") &&
-1 == parseInt(getValue("Frm_SrcPrefixLen")))
{
setValue("Frm_SrcPrefixLen", "");
}
jslSetValue("Frm_DstPrefixLen", "DstPrefixLen"+i);
if ("" == getValue("Frm_DstIpV6") &&
-1 == parseInt(getValue("Frm_DstPrefixLen")))
{
setValue("Frm_DstPrefixLen", "");
}
}
else
{
showIP("Frm_SrcIp", "SrcIp"+i);
showIP("Frm_SrcIpMask", "SrcIpMask"+i);
showIP("Frm_DstIp", "DstIp"+i);
showIP("Frm_DstIpMask", "DstIpMask"+i);
}
jslDoShowComboBox("Frm_FilterTarget", "FilterTarget"+i);
var originInOut = getValue("InOut"+i);
var originLocalForward = getValue("LocalForward"+i);
if(originInOut == "1" && originLocalForward == "1")
{
setValue("Frm_Direction", "WAN->CPE");
}
else if(originInOut == "1" && originLocalForward == "2")
{
setValue("Frm_Direction", "WAN->LAN");
}
else if(originInOut == "2" && originLocalForward == "1")
{
setValue("Frm_Direction", "LAN->CPE");
}
else if(originInOut == "2" && originLocalForward == "2")
{
setValue("Frm_Direction", "LAN->WAN");
}
}
function pageDel(instIndex)
{
DisableALL();
setValue("IACTION"+instIndex, "delete");
getObj("fSubmit").submit();
}
function back4add()
{
DisableALL();
getObj("fSubmit").submit();
}
function Check_PrefixValue(frm_id, fnt_id, isNull)
{
var msg = "";
var prefixValue = getValue(frm_id);
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
if((false == checkIPV6Address(prefixValue)) || ("::" == prefixValue))
{
msg = getmsg(200);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function Check_PrefixLenValue(frm_id, fnt_id, isNull, min, max)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
var ret = checkIntegerRange(getValue(frm_id), min, max);
if(-2 == ret)
{
msg = getmsg(115);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else if(-3 == ret)
{
msg = getmsg(116, min, max);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
{
}
return true;
}
function Check_Prefix(frm_id, frm_lenid, fnt_id)
{
var msg = "";
if( false == checkNull(getValue(frm_id)) && false != checkNull(getValue(frm_lenid)) )
{
msg = getmsg(200);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
if( false != checkNull(getValue(frm_id)) && false == checkNull(getValue(frm_lenid)) )
{
msg = getmsg(200);
ShowErrorForCom(frm_lenid, fnt_id, msg);
return false;
}
return true;
}
function Check_IPAdress()
{
if(getValue("IF_IPMode") == "IPV6")
{
if(Check_PrefixValue("Frm_SrcIpV6", "Fnt_SrcIpV6", 0) != true)
{
return false;
}
if(Check_PrefixValue("Frm_DstIpV6", "Fnt_DstIpV6", 0) != true)
{
return false;
}
if(Check_PrefixLenValue("Frm_SrcPrefixLen", "Fnt_SrcIpV6", 0, 1, 128) !=true)
{
return false;
}
if(Check_PrefixLenValue("Frm_DstPrefixLen", "Fnt_DstIpV6", 0, 1, 128) !=true)
{
return false;
}
if(Check_Prefix("Frm_SrcIpV6", "Frm_SrcPrefixLen", "Fnt_SrcIpV6") != true)
{
return false;
}
if(Check_Prefix("Frm_DstIpV6", "Frm_DstPrefixLen", "Fnt_DstIpV6") != true)
{
return false;
}
}
else
{
if( false == checkIP("Frm_SrcIp", "Fnt_SrcIp", 0) )
{
return  false;
}
if( getValue("Frm_SrcIpMask")!=""
&& checkMaskAddress(getValue("Frm_SrcIpMask")) != true)
{
msg = getmsg(109);
ShowErrorForCom("Frm_SrcIpMask", "Fnt_SrcIpMask", msg);
return false;
}
if( getValue("Frm_SrcIp") == "" && getValue("Frm_SrcIpMask") != "")
{
msg = getmsg(101);
ShowErrorForCom("Frm_SrcIp", "Fnt_SrcIp", msg);
return false;
}
if( false == checkIP("Frm_DstIp", "Fnt_DstIp", 0) )
{
return  false;
}
if( getValue("Frm_DstIpMask")!=""
&& checkMaskAddress(getValue("Frm_DstIpMask")) != true)
{
msg = getmsg(109);
ShowErrorForCom("Frm_DstIpMask","Fnt_DstIpMask",msg);
return false;
}
if( getValue("Frm_DstIp") == "" && getValue("Frm_DstIpMask") != "")
{
msg = getmsg(101);
ShowErrorForCom("Frm_DstIp", "Fnt_DstIp", msg);
return false;
}
}
return true;
}
function showIPV6(viewId, postId)
{
if("::" == getValue(postId))
{
setValue(viewId, "");
}
else
{
jslSetValue(viewId, postId);
}
}
</script>