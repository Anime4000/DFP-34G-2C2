<script language="javascript">
var DHCPDYNAMIC_PARA = new Array(
"ViewName",
"LandViewName",
"ServerEnable",
"DnsRefreshTime",
"Prefer",
"ConflictAddrHoldingTime",
"DomainName"
);
var DHCPHOSTINFO_PARA = new Array(
"Duid",
"IpAddr",
"ExpiredTime"
);
var DHCPBASIC_PARA = new Array(
"ETHIfNum",
"USBIfNum",
"WLANIfNum",
"Enable",
"BasicIPAddr",
"SubMask",
"AddressingType",
"IPv6Addr",
"IPv6PrefLen"
);


function getmsg(id)
{

var str      = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(115, "&?error_115;");
str[2]   = new Array(116, "&?error_116;");
str[3]   = new Array(117, "&?error_117;");
str[4]   = new Array(200, "&?error_200;");

return getMsgFormArray(str, arguments);
}
function hasNullView()
{
var flag = 0;
var num = getValue("IF_INSTNUM");
if(num > 0)
{
for(var i = 0; i < num; i++)
{
if (getValue("IpAddr" + i) == "")
{
flag = 1;
break;
}
}
}
return flag;
}
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
if(0 == hasNullView())
{
OldProcessRet(errstr, errpara);
}
pageGetValue();
showTable();
}
function getInput(value,len)
{
return ("<input class=\"uiNoBorder\"  type=\"text\"  size=\""+len+"\" value=\""+value+"\" readonly>");
}

function addline(index)
{
var newline = getObj("Dhcp_Table").insertRow(-1);
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
for(var i = 0; i < DHCPHOSTINFO_PARA.length ; i++)
{
var val = getValue(DHCPHOSTINFO_PARA[i] + index);
if("ExpiredTime" == DHCPHOSTINFO_PARA[i])
{
if( val == "-1" || val == "4294967295")
{
newline.insertCell(-1).innerHTML = "&?public004;";
continue;
}
newline.insertCell(-1).innerHTML = getInput(val, 8);
}
else if ("Duid" == DHCPHOSTINFO_PARA[i])
{
newline.insertCell(-1).innerHTML = getInput(val, 8);
}
else if ("IpAddr" == DHCPHOSTINFO_PARA[i])
{
newline.insertCell(-1).innerHTML = getInput(val, 20);
}
}
}

function showTable()
{
var num = getValue("IF_INSTNUM");
if(num != 0)
{
for(var i = 0; i < num; i++)
{
if (getValue("IpAddr"+i) == "")
{
continue;
}
addline(i);
}
}
else
{
var newline = getObj("Dhcp_Table").insertRow(-1);
newline.setAttribute("align", "center");
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
var objcell =  newline.insertCell(-1);
objcell.colSpan = 3;
objcell.innerHTML= "&?note_008;"
}
}
function pageGetValue()
{
jslSetValue("Frm_IPv6Addr", "IPv6Addr");
jslSetValue("Frm_IPv6PrefLen", "IPv6PrefLen");
jslPostToViewCheckBox("Frm_ServerEnable", "ServerEnable");
jslSetValue("Frm_DnsRefreshTime", "DnsRefreshTime");
}
function pageSetValue()
{
HiddenParaInit(DHCPDYNAMIC_PARA);
HiddenParaInit(DHCPBASIC_PARA);
jslSetValue("IPv6Addr", "Frm_IPv6Addr");
jslSetValue("IPv6PrefLen", "Frm_IPv6PrefLen");
jslViewToPostCheckBox("ServerEnable", "Frm_ServerEnable");
jslSetValue("DnsRefreshTime", "Frm_DnsRefreshTime");
}
function Check_PrefixValue(FrmPrefix, FntPrefix, FrmPrefixLen, min, max)
{
var msg;
var prefixValue = getValue(FrmPrefix);
var prefixLenValue = getValue(FrmPrefixLen);
if(false == checkNull(prefixValue))
{
msg = getmsg(101);
ShowErrorForCom(FrmPrefix, FntPrefix, msg);
return false;
}
if(false == checkNull(prefixLenValue))
{
msg = getmsg(101);
ShowErrorForCom(FrmPrefixLen, FntPrefix, msg);
return false;
}
if((false == checkIPV6Address(prefixValue)) || ("::" == prefixValue))
{
msg = getmsg(200);
ShowErrorForCom(FrmPrefix, FntPrefix, msg);
return false;
}
var ret = checkIntegerRange(prefixLenValue, 48, 64);
if(-2 == ret)
{
msg = getmsg(115);
ShowErrorForCom(FrmPrefixLen, FntPrefix, msg);
return false;
}
else if(-3 == ret)
{
msg = getmsg(116, 48, 64);
ShowErrorForCom(FrmPrefixLen, FntPrefix, msg);
return false;
}
return true;
}
function Check_IntegerRange(value, min, max, Frm, Fnt)
{
var tem = checkIntegerRange(value, min, max);
if(tem == -1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem == -2)
{
msg = getmsg(115);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem == -3)
{
msg = getmsg(116,min,max);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
return true;
}
function pageCheckValue()
{
if(Check_PrefixValue("Frm_IPv6Addr", "Fnt_IPv6Addr", "Frm_IPv6PrefLen", 48, 64) != true)
{
return false;
}
var DnsRefreshTime = getValue("Frm_DnsRefreshTime");
if(Check_IntegerRange(DnsRefreshTime, 60, 864000, "Frm_DnsRefreshTime", "Fnt_DnsRefreshTime") != true)
{
return false;
}
return true;
}
function pageCancel()
{
DisableALL();
getObj("fSubmit").submit();
}
function pageSubmit()
{
if(pageCheckValue() == true)
{
pageSetValue();
setValue("IF_ACTION", "apply");
var loginaddr = document.URL;
var parts = loginaddr.split("/");
if(true == checkIpAddress(parts[2],""))
{
setValue("IP_Protocol","IPv4");
}
else
{
setValue("IP_Protocol","IPv6");
}
setValue("IP_URL_IP",parts[2]);
DisableALL();
getObj("fSubmit").submit();
}
}
</script>
