
<script language="javascript">
var FWPMSTATIC_PARA = new Array(
"Enable",
"Name",
"Protocol",
"MinRemoteHost",
"MaxRemoteHost",
"MinExtPort",
"MaxExtPort",
"MinIntPort",
"MaxIntPort",
"WANCViewName",
"InternalHost",
"InternalMacHost",
"MacEnable"
);
var OTHER_PARA = new Array(
"ViewName",
"WANCName",
"MaxIntPort",
"Description",
"LeaseDuration",
"PortMappCreator"
);
var index ="";
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
if("not cfg" == errstr)
{
var msg = getmsg(537);
ShowErrorForCom(null, null, msg);
}
else if("cfg" == errstr)
{
var msg = getmsg(538);
ShowNoteForCom(null, null, msg);
}
else
{
OldProcessRet(errstr, errpara);
}
moveErrLayer(580,40);
showTable();
}
function getNameValue(id, size, value)
{
return ("<input type=\"text\" class=\"uiNoBorder\" size=\"" + size +"\" value=\""
+ HTMLEnCode(value) + "\"  id=\"" + id + "\"  readonly>");
}
function addline(index)
{
var newline  = getObj("fwpm_Table").insertRow(-1);
var newline2 = getObj("fwpm_Table").insertRow(-1);
var cellId = "";
var cellSize = 0;
var cellValue = "";
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
var newCell = newline.insertCell(-1);
cellId = "Line_" + index + "_" + FWPMSTATIC_PARA[0] + "_" + 0;
newCell.innerHTML = showIsEnableImage(getValue(FWPMSTATIC_PARA[0]+index), cellId);
newCell.id = "enable_" + (2*index).toString();
for(var i = 1; i < FWPMSTATIC_PARA.length - 2; i+=2)
{
cellId = "Line_" + index + "_" + FWPMSTATIC_PARA[i] + "_" + i;
if(1 == i || 5 == i)
{
cellSize = 6;
}
else
if(3 == i)
{
cellSize = 12;
}
else
{
cellSize = 10;
}
if(9==i)
cellValue = getValue("WANCName" + index);
else
cellValue = getValue(FWPMSTATIC_PARA[i]+index);
if(i == 5 && cellValue == 0)
{
cellValue = "1";
}
if(i == 7 && getValue("MinExtPort"+index) == 0)
{
cellValue = "1";
}
if(3 == i && cellValue == "0.0.0.0")
{
cellValue = "";
}
newline.insertCell(-1).innerHTML = getNameValue(cellId, cellSize, "");
setValue(cellId, cellValue);
}
newCell = newline.insertCell(-1);
newCell.innerHTML = getImagefrmClass("multiImg_modify", "Modify("+index+")", "modify" + index);
newCell.id = "modify_" + (2*index).toString();
newCell = newline.insertCell(-1);
newCell.innerHTML = getImagefrmClass("multiImg_delete", "pageDel("+index+")", "delete" + index);
newCell.id = "delete_" + (2*index).toString();
newline2.setAttribute("class", "white");
newline2.setAttribute("className", "white");
newCell = newline2.insertCell(-1);
newCell.id = "enable_" + (2*index+1).toString();
for(var i = 2; i < FWPMSTATIC_PARA.length - 2; i+=2)
{
cellId = "Line_" + index + "_" + FWPMSTATIC_PARA[i] + "_" + i;
if(2 == i)
{
cellSize = 6;
cellValue = TransferList(i, getValue(FWPMSTATIC_PARA[i]+index));
}
else if(4 == i)
{
cellSize = 12;
if(getValue(FWPMSTATIC_PARA[i]+index) == "0.0.0.0")
{
cellValue = "";
}
else
cellValue = getValue(FWPMSTATIC_PARA[i]+index);
}
else if(6 == i)
{
cellSize = 6;
cellValue = getValue(FWPMSTATIC_PARA[i]+index);
if(getValue("MinExtPort"+index) == "0")
{
cellValue = "65535"
}
else
{
if(cellValue == "0")
{
cellValue = getValue("MinExtPort"+index);
}
}
}
else if(8 == i)
{
cellSize = 12;
cellValue = getValue(FWPMSTATIC_PARA[i]+index);
if(getValue("MinExtPort"+index) == "0")
{
cellValue = "65535"
}
else
{
if(cellValue == "0")
{
cellValue = getValue("MinIntPort"+index);
}
}
}
else if(10 == i)
{
cellSize = 12;
cellValue = getValue(FWPMSTATIC_PARA[10]+index);
}
else
{
}
newline2.insertCell(-1).innerHTML = getNameValue(cellId, cellSize, "" );
setValue(cellId, cellValue);
}
newCell = newline2.insertCell(-1);
newCell.id = "modify_" + (2*index+1).toString();
newCell = newline2.insertCell(-1);
newCell.id = "delete_" + (2*index+1).toString();
var obj0 = document.getElementById("enable_" + (2*index).toString());
var obj1 = document.getElementById("enable_" + (2*index+1).toString());
obj0.rowSpan++;
obj1.parentNode.removeChild(obj1);
var obj0 = document.getElementById("modify_" + (2*index).toString());
var obj1 = document.getElementById("modify_" + (2*index+1).toString());
obj0.rowSpan++;
obj1.parentNode.removeChild(obj1);
var obj0 = document.getElementById("delete_" + (2*index).toString());
var obj1 = document.getElementById("delete_" + (2*index+1).toString());
obj0.rowSpan++;
obj1.parentNode.removeChild(obj1);
}
function TransferList(i,para_i)
{
if(2 == i)
{
if(0 == para_i) return "TCP";
else
if(1 == para_i) return "UDP";
else
if(2 == para_i) return "TCP AND UDP";
}
return  null;
}
function showTable()
{
var num = getValue("IF_INSTNUM");
if( num > 0)
{
for(var i = 0; i < num; i++)
{
addline(i);
}
}
else
{
var newline = getObj("fwpm_Table").insertRow(-1);
newline.setAttribute("align", "center");
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
var objcell =  newline.insertCell(-1);
objcell.colSpan = 8;
objcell.innerHTML= "&?note_007;";
}
}
function getmsg(id)
{

var str      = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(102, "&?error_102;");
str[2]   = new Array(103, "&?error_103;");
str[3]   = new Array(108, "&?error_108;");
str[4]   = new Array(115, "&?error_115;");
str[5]   = new Array(116, "&?error_116;");
str[6]   = new Array(117, "&?error_117;");
str[7]   = new Array(118, "&?error_118;");
str[8]   = new Array(119, "&?error_119;");
str[9]   = new Array(122, "&?error_122;");
str[10]  = new Array(127, "&?error_127;");
str[11]  = new Array(138, "&?error_138;");
str[12]  = new Array(139, "&?error_139;");
str[13]  = new Array(140, "&?error_140;");
str[14]  = new Array(141, "&?error_141;");
str[15]  = new Array(144, "&?error_144;");
str[16]  = new Array(114, "&?error_114;");
str[17]  = new Array(148, "&?error_148;");
str[18]  = new Array(155, "&?error_155;");
str[19]  = new Array(156, "&?error_156;");
str[20]  = new Array(510, "&?error_510;");
str[21]  = new Array(509, "&?error_509;");
str[22]  = new Array(511, "&?error_511;");
str[23]  = new Array(512, "&?error_512;");
str[24]  = new Array(513, "&?error_513;");
str[25]  = new Array(514, "&?error_514;");
str[26]  = new Array(110, "&?error_110;");
str[27]  = new Array(537, "&?error_537;");
str[28]  = new Array(538, "&?error_538;");
str[29]  = new Array(539, "&?error_539;");
str[30]  = new Array(540, "&?error_540;");
return getMsgFormArray(str, arguments);
}
function pageSetValue()
{
HiddenParaInit(FWPMSTATIC_PARA);
HiddenParaInit(OTHER_PARA);
jslViewToPostCheckBox("Enable", "Frm_Enable");
jslSetValue("Name", "Frm_Name");
jslSetValue("Protocol", "Frm_Protocol");
if( "" !=getValue("Frm_RemoteHost"))
jslSetValue("MinRemoteHost", "Frm_RemoteHost");
else
setValue("MinRemoteHost", "0.0.0.0");
if( "" !=getValue("Frm_EndRemoteHost"))
jslSetValue("MaxRemoteHost", "Frm_EndRemoteHost");
else
setValue("MaxRemoteHost", "0.0.0.0");
jslSetValue("WANCViewName", "Frm_WANCViewName");
jslSetValue("MinExtPort", "Frm_MinExtPort");
jslSetValue("MaxExtPort", "Frm_MaxExtPort");
jslSetValue("InternalHost", "Frm_InternalHost");
jslSetValue("MinIntPort", "Frm_MinIntPort");
jslSetValue("MaxIntPort", "Frm_MaxIntPort");
}
function pageCheckValue(insId)
{
var msg = "";
if(false == PageResetValueRmZero("Frm_MinExtPort","Fnt_MinExtPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MaxExtPort","Fnt_MaxExtPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MinIntPort","Fnt_MinIntPort"))
{
return  false;
}
if(false == PageResetValueRmZero("Frm_MaxIntPort","Fnt_MaxIntPort"))
{
return  false;
}
if(false == checkName("Frm_Name","Fnt_Name", 1, 1, 32))
{
return  false;
}
if( false == isSameElement("Frm_Name", "Name", insId) )
{
if( -1 == insId)
{
msg = getmsg(139);
}
else
{
msg = getmsg(140);
}
ShowErrorForCom("Frm_Name", "", msg);
return false;
}
ReSetIpRmZero("Frm_InternalHost","Frm_RemoteHost");
ReSetIpRmZero("Frm_RemoteHost");
ReSetIpRmZero("Frm_EndRemoteHost");
if(false == checkIP("Frm_RemoteHost", "Fnt_RemoteHost", 0))
{
return  false;
}
if(false == checkIP("Frm_EndRemoteHost", "Fnt_EndRemoteHost", 0))
{
return  false;
}
if( false == checkIPZero(getValue("Frm_RemoteHost")) )
{
msg = getmsg(108);
ShowErrorForCom( "Frm_RemoteHost", "Fnt_RemoteHost", msg);
return  false;
}
if( false == checkIPZero(getValue("Frm_EndRemoteHost")) )
{
msg = getmsg(108);
ShowErrorForCom( "Frm_EndRemoteHost", "Fnt_EndRemoteHost", msg);
return  false;
}
if( getValue("Frm_RemoteHost") != "" && getValue("Frm_EndRemoteHost") != "")
{
if( compareIP(getValue("Frm_RemoteHost"), getValue("Frm_EndRemoteHost")) > 0)
{
msg = getmsg(510);
ShowErrorForCom(null, null, msg);
return false;
}
}
else
if( getValue("Frm_RemoteHost") == "" && getValue("Frm_EndRemoteHost") != "")
{
msg = getmsg(509);
ShowErrorForCom(null, null, msg);
return false;
}
if(false == checkPort("Frm_MinExtPort", "Fnt_MinExtPort", 1, 1, 65535))
{
return  false;
}
if(false == checkPort("Frm_MaxExtPort", "Fnt_MaxExtPort", 1, 1, 65535))
{
return  false;
}
if(false == checkPort("Frm_MinIntPort", "Fnt_MinIntPort", 1, 1, 65535))
{
return  false;
}
if(false == checkPort("Frm_MaxIntPort", "Fnt_MaxIntPort", 1, 1, 65535))
{
return  false;
}
if( ( parseInt(getValue("Frm_MinExtPort")) * parseInt(getValue("Frm_MaxExtPort")) * parseInt(getValue("Frm_MinIntPort")) * parseInt(getValue("Frm_MaxIntPort")) == 0 )
&& ( parseInt(getValue("Frm_MinExtPort")) + parseInt(getValue("Frm_MaxExtPort")) + parseInt(getValue("Frm_MinIntPort")) + parseInt(getValue("Frm_MaxIntPort")) != 0 )
)
{
msg = getmsg(148);
ShowErrorForCom(null, null, msg);
return  false;
}
if( parseInt(getValue("Frm_MinExtPort")) != "" && parseInt(getValue("Frm_MaxExtPort")) != "" )
{
if( parseInt(getValue("Frm_MinExtPort")) > parseInt(getValue("Frm_MaxExtPort")) )
{
msg = getmsg(512);
ShowErrorForCom(null, null, msg);
return false;
}
}
if( parseInt(getValue("Frm_MinIntPort")) != "" && parseInt(getValue("Frm_MaxIntPort")) != "" )
{
if( parseInt(getValue("Frm_MinIntPort")) > parseInt(getValue("Frm_MaxIntPort")) )
{
msg = getmsg(513);
ShowErrorForCom(null, null, msg);
return false;
}
}
if((parseInt(getValue("Frm_MinIntPort")) - parseInt(getValue("Frm_MaxIntPort")))!=(parseInt(getValue("Frm_MinExtPort")) - parseInt(getValue("Frm_MaxExtPort"))))
{
msg = getmsg(514);
ShowErrorForCom(null, null, msg);
return false;
}
if( false == checkIPZero(getValue("Frm_RemoteHost")) )
{
msg = getmsg(108);
ShowErrorForCom( "Frm_RemoteHost", "Fnt_RemoteHost", msg);
return  false;
}
if( "255.255.255.255" == getValue("Frm_RemoteHost") )
{
msg = getmsg(156);
ShowErrorForCom( "Frm_RemoteHost", "Fnt_RemoteHost", msg);
return  false;
}
if( "255.255.255.255" == getValue("Frm_EndRemoteHost") )
{
msg = getmsg(156);
ShowErrorForCom( "Frm_EndRemoteHost", "Fnt_EndRemoteHost", msg);
return  false;
}
if(false == checkIP("Frm_InternalHost", "Fnt_InternalHost", 1))
{
return  false;
}
if( false == checkIPZero(getValue("Frm_InternalHost")) )
{
msg = getmsg(108);
ShowErrorForCom( "Frm_InternalHost", "Fnt_InternalHost", msg);
return  false;
}
if( "255.255.255.255" == getValue("Frm_InternalHost") )
{
msg = getmsg(156);
ShowErrorForCom( "Frm_InternalHost", "Frm_InternalHost", msg);
return  false;
}
return true;
}
function PageResetValueRmZero(frm_id, fnt_id)
{
if( false == ReSetValueRmZero(frm_id) )
{
var msg = getmsg(144);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function checkName(frm_id, fnt_id, isNull, minLength, maxLength)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return  true;
}
var  nameCheck = checkStrLengthRange(getValue(frm_id), minLength, maxLength);
if("-1" == nameCheck)
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if(false == checkGenStringForASC(getValue(frm_id)))
{
msg = getmsg(114);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if("-3" == nameCheck)
{
msg = getmsg(102, minLength, maxLength);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function checkPort(frm_id, fnt_id, isNull, minValue, maxValue)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return  true;
}
var portCheck = checkIntegerRange(getValue(frm_id), minValue, maxValue);
if("-1" == portCheck)
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
if("-2" == portCheck)
{
msg = getmsg(115);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if("-3" == portCheck)
{
msg = getmsg(116, minValue, maxValue);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function  checkIP(frm_id, fnt_id, isNull, num)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return  true;
}
else
if( 1 == isNull && false == checkNull(getValue(frm_id)) )
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return  false;
}
if(false == checkIpAddress(getValue(frm_id), num))
{
msg = getmsg(108);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
if( "255.255.255.255" == getValue(frm_id) )
{
msg = getmsg(156);
ShowErrorForCom( frm_id, fnt_id, msg);
return  false;
}
return true;
}
function  checkIPZero(value)
{
var ipaddr = value;
var parts = ipaddr.split(".");
for( var i = 0; i < 4; i++)
{
if( parseInt((parts[i]),10) != 0 )
{
return true;
}
}
return false;
}
function  isSameElement(frm_id, id, modify_i)
{
var num = getValue("IF_INSTNUM");
for(var i = 0; i < num; i++)
{
if( i == modify_i )
{
continue;
}
if( getValue(frm_id) == getValue(id + i) )
{
return false;
}
}
return true;
}
function Modify(i)
{
jslDiDisplay("Btn_Add");
jslEnDisplay("Btn_Edit");
document.getElementById("back").style.display="";
modifyGetValue(i);
index = i;
}
function modifyGetValue(i)
{
jslPostToViewCheckBox("Frm_Enable", "Enable"+i);
jslSetValue("Frm_Name", "Name"+i);
var obj = getObj("Frm_Protocol");
jslDoShowComboBox("Frm_Protocol", "Protocol"+i);
if(-1 == obj.selectedIndex)
{
setSelOtherValue(obj, "", null);
obj.selectedIndex = 0;
}
if(getValue("MinRemoteHost"+i) == "0.0.0.0")
{
setValue("Frm_RemoteHost", "");
}
else
{
jslSetValue("Frm_RemoteHost", "MinRemoteHost"+i);
}
if(getValue("MaxRemoteHost"+i) == "0.0.0.0")
{
setValue("Frm_EndRemoteHost", "");
}
else
{
jslSetValue("Frm_EndRemoteHost", "MaxRemoteHost"+i);
}
if(getValue("InternalHost"+i) == "0.0.0.0")
{
setValue("Frm_InternalHost", "");
}
else
{
jslSetValue("Frm_InternalHost", "InternalHost"+i);
}
obj = getObj("Frm_WANCViewName");
jslDoShowComboBox("Frm_WANCViewName", "WANCViewName"+i);
if(-1 == obj.selectedIndex)
{
setSelOtherValue(obj, "", null);
obj.selectedIndex = 0;
}
jslSetValue("Frm_MinExtPort", "MinExtPort"+i);
jslSetValue("Frm_MaxExtPort", "MaxExtPort"+i);
jslSetValue("Frm_MinIntPort", "MinIntPort"+i);
jslSetValue("Frm_MaxIntPort", "MaxIntPort"+i);
if (getValue("MinExtPort"+i) == "0")
{
setValue("Frm_MinExtPort", "1");
setValue("Frm_MaxExtPort", "65535");
setValue("Frm_MinIntPort", "1");
setValue("Frm_MaxIntPort", "65535");
}
if(getValue("MinExtPort"+i) != "0" && getValue("MaxExtPort"+i) == "0")
{
jslSetValue("Frm_MaxExtPort", "MinExtPort"+i);
}
if(getValue("MinExtPort"+i) != "0" && getValue("MaxIntPort"+i) == "0")
{
jslSetValue("Frm_MaxIntPort", "MinIntPort"+i);
}
}
function pageEdit()
{
if(true == pageCheckValue(index))
{
pageSetValue();
setValue("IF_ACTION", "apply");
setValue("IF_INDEX", index);
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function pageAdd()
{
jslEnDisplay("Btn_Add");
jslDiDisplay("Btn_Edit");
if(true == pageCheckValue(-1))
{
pageSetValue();
setValue("IF_ACTION", "new");
setValue("IF_INDEX", "-1");
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function pageDel(i)
{
setValue("IF_ACTION", "delete");
setValue("IF_INDEX",i);
DisableALL();
getObj("fSubmit").submit();
}
function compareIP(minIP, maxIP)
{
var minParts = minIP.split(".");
var maxParts = maxIP.split(".");
for( var i = 0; i < 4; i++)
{
if( parseInt((minParts[i]),10) != parseInt((maxParts[i]),10) )
{
return (parseInt((minParts[i]),10) - parseInt((maxParts[i]),10));
}
}
}
function back4add()
{
var number = getValue("IF_INSTNUM");
DisableALL();
getObj("fSubmit").submit();
}
</script>